name: Release

env:
  SCRIPT: script.js
  SCRIPT_MINIFIED: script-minified.js
  BLOB_URL_PREFIX: "https://github.com/SimonLammer/anki-persistence/blob"
  RELEASE_BRANCH: "readme-script_version-bump"

on:
  workflow_run:
    workflows: ["Test"]
    branches-ignore:
      - "readme-script_version-bump"
    types:
      - completed
  push:
    branches: [ci]

jobs:
  release:
    runs-on: ubuntu-latest
      #if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v3

      # Fetch version numbers
      - id: latest_release
        uses: gregziegan/fetch-latest-release@v2.0.0
      - run: echo "VERSION_LATEST=`echo '${{ steps.latest_release.outputs.name }}' | cut -c 2-`" >>$GITHUB_ENV
      - name: Fetch current version number
        run: echo "VERSION_CURRENT=`jq <package.json -r '.version'`" >>$GITHUB_ENV
      - run: echo VERSION_CURRENT=${{ env.VERSION_CURRENT }}

      - uses: actions/setup-node@v3
        with:
          cache: 'npm'

      - name: Minify ${{ env.SCRIPT }}
        run: |
          printf "// ${{ env.VERSION_CURRENT }} - ${{ env.BLOB_URL_PREFIX }}/$GITHUB_SHA/${{ env.SCRIPT }}\n" >${{ env.SCRIPT_MINIFIED }}
          npm run minify | tail -n 1 >>${{ env.SCRIPT_MINIFIED }}

      - name: Create version files
        run: |
          echo ${{ env.VERSION_LATEST }} > version-latest.txt
          echo ${{ env.VERSION_CURRENT }} > version-current.txt
      - uses: actions/upload-artifact@v3
        with:
          name: release
          path: |
            version-latest.txt
            version-current.txt
            ${{ env.SCRIPT }}
            ${{ env.SCRIPT_MINIFIED }}

      - name: Ensure version number has been incremented
        run: |
          node -e '
            function r(v){
              return v.trim().split(".").map(Number);
            };
            current=r("${{ env.VERSION_CURRENT }}");
            latest=r("${{ env.VERSION_LATEST }}");
            for (i in latest) {
              if(current[i]>latest[i])
                break;
              assert(current[i]==latest[i], "Current version is lower than latest version")
            };
            assert(i<latest.length-1||current[i]>=latest[i], "Current version number equals latest version number");'

      # Release
      - run: echo "RELEASE_NAME=v${{ env.VERSION_CURRENT }}" >>$GITHUB_ENV
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GH_TOKEN }}
          tag_name: ${{ env.RELEASE_NAME }}
          generate_release_notes: true
          draft: true
          files: |
            ${{ env.SCRIPT_MINIFIED }}

      - run: ls -lah
      - run: cat ${{ env.SCRIPT_MINIFIED }}
      - name: Update Readme with new anki-persistence version
        run: |
          perl -pi -e "
            use strict;
            use warnings;
            BEGIN{undef $/;};
            s@// v[^\n]*\n[^\n]*@`cat ${{ env.SCRIPT_MINIFIED }} | sed -z 's/\n/\\n/g'`@smg;" \
            README.md
      - run: cat README.md
      - run: git status
      - name: Cleanup temporary files
        run: |
          rm -rf \
            ${{ env.SCRIPT_MINIFIED }} \
            version*.txt
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          title: "Update README script version to ${{ env.RELEASE_NAME }}"
          branch: ${{ env.RELEASE_BRANCH }}
          commit-message: "Update README script version to ${{ env.RELEASE_NAME }}"
          delete-branch: true

